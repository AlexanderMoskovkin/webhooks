{"version":3,"sources":["webhooks-handler.js"],"names":[],"mappings":";;;;;;;;;QAUsB,aAAa,GAAb,aAAa;QAqCb,eAAe,GAAf,eAAe;;sBA/ClB,UAAU;;;;AAE7B,IAAI,WAAW,GAAG,oBAAoB,CAAC;AACvC,IAAI,WAAW,GAAG,kBAAkB,CAAC;AACrC,IAAI,WAAW,GAAG,0CAA0C,CAAC;;;AAG7D,IAAI,MAAM,GAAG,qBAAW,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;;;;AAGxD,SAAe,aAAa,CAAC,aAAa,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ;QACtE,GAAG;;;;AAAH,mBAAG,GAAG;AACN,iCAAa,EAAE,aAAa;AAC5B,+BAAW,EAAE,WAAW;AACxB,wBAAI,EAAE,IAAI;AACV,4BAAQ,EAAE,QAAQ;;AAElB,kCAAc,EAAE,KAAK,GAAG,IAAI;AAC5B,mCAAe,EAAE,IAAI;AACrB,mCAAe,EAAE,UAAU,GAAG,IAAI;iBACrC;oDAEM,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,eAAe,CAAC,CAC7D,IAAI,CAAC,YAAY;AACd,2BAAO,MAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC;iBACnF,CAAC,CACD,IAAI,CAAC,UAAU,YAAY,EAAE;AAC1B,2BAAO,MAAM,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,EAAE,YAAY,EAAE,uBAAuB,CAAC,CAAC;iBAC5F,CAAC,CACD,IAAI,CAAC,UAAU,WAAW,EAAE;AACzB,2BAAO,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,GAAG,CAAC,cAAc,CAAC,CAAC;iBAC/D,CAAC,CACD,IAAI,CAAC,UAAU,GAAG,EAAE;AACjB,uBAAG,CAAC,eAAe,GAAG,GAAG,CAAC,SAAS,CAAC;AACpC,2BAAO,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;iBACnD,CAAC,CACD,IAAI,CAAC,YAAY;AACd,2BAAO,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;iBACzE,CAAC,CACD,IAAI,CAAC,YAAY;AACd,2BAAO,aAAY,UAAA,OAAO;+BAAI,OAAO,CAAC,GAAG,CAAC;qBAAA,CAAC,CAAC;iBAC/C,CAAC,CACD,KAAK,CAAC,UAAU,GAAG,EAAE;AAClB,0BAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;iBACxB,CAAC;;;;;;;CACT;;AAEM,SAAe,eAAe,CAAC,GAAG,EAAE,MAAM,EAAE,SAAS;;;;oDACjD,MAAM,CAAC,wBAAwB,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC,CAC1E,IAAI,CAAC,YAAY;AACd,0BAAM,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;iBAC3C,CAAC;;;;;;;CACT","file":"webhooks-handler.js","sourcesContent":["import GitHub from './github';\r\n\r\nvar GITHUB_USER = 'AlexanderMoskovkin';\r\nvar GITHUB_REPO = 'testcafe-phoenix';\r\nvar OAUTH_TOKEN = 'eb86634398d9049fd40fffd4ad9437ce2a198be8';\r\n//'29ca9b01bc72125d3ea1e6ee61be7374dc56da26'\r\n\r\nvar github = new GitHub(GITHUB_USER, GITHUB_REPO, OAUTH_TOKEN);\r\n\r\n//returns sha of the tested commit\r\nexport async function onPullRequest(baseCommitSha, prHeadLabel, prId, prNumber) {\r\n    var ctx = {\r\n        baseCommitSha: baseCommitSha,\r\n        prHeadLabel: prHeadLabel,\r\n        prId: prId,\r\n        prNumber: prNumber,\r\n\r\n        testBranchName: 'rp-' + prId,\r\n        testedCommitSha: null,\r\n        _tempBranchName: 'temp-pr-' + prId\r\n    };\r\n\r\n    return github.createBranch(ctx.baseCommitSha, ctx._tempBranchName)\r\n        .then(function () {\r\n            return github.createPullRequest(ctx.prId, ctx._tempBranchName, ctx.prHeadLabel);\r\n        })\r\n        .then(function (tempPrNumber) {\r\n            return github.mergePullRequest(ctx.baseCommitSha, tempPrNumber, 'Merge pr to run tests');\r\n        })\r\n        .then(function (prCommitSha) {\r\n            return github.createBranch(prCommitSha, ctx.testBranchName);\r\n        })\r\n        .then(function (res) {\r\n            ctx.testedCommitSha = res.branchSha;\r\n            return github.deleteBranch(ctx._tempBranchName);\r\n        })\r\n        .then(function () {\r\n            return github.createPullRequestComment(ctx.prNumber, 'tests started');\r\n        })\r\n        .then(function () {\r\n            return new Promise(resolve => resolve(ctx));\r\n        })\r\n        .catch(function (err) {\r\n            throw new Error(err);\r\n        });\r\n}\r\n\r\nexport async function onTestsFinished(ctx, status, reportUrl) {\r\n    return github.createPullRequestComment(ctx.prNumber, status + ': ' + reportUrl)\r\n        .then(function () {\r\n            github.deleteBranch(ctx.testBranchName);\r\n        });\r\n}"],"sourceRoot":"../src"}